ext {
    kotlinx_html_version = "0.6.4" 
}


buildscript {
    ext.kotlin_version = '1.2.60'
    ext.serialization_version = '0.6.1'

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
     maven { url "https://kotlin.bintray.com/kotlinx" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
        classpath "org.jetbrains.kotlinx:kotlinx-gradle-serialization-plugin:$serialization_version"
    }
}

apply plugin: 'com.moowork.node'
apply plugin: 'kotlin-platform-js'
apply plugin: 'kotlin2js'
apply plugin: 'kotlinx-serialization'

repositories {
    jcenter()
     maven { url "https://kotlin.bintray.com/kotlinx" }
    mavenCentral()
}

[compileKotlin2Js, compileTestKotlin2Js]*.configure {
    kotlinOptions {
        sourceMap = true
        sourceMapEmbedSources = "always"
        moduleKind = 'commonjs'
        main = "call"
        metaInfo = true
    }
}

dependencies {
    compile "org.jetbrains.kotlinx:kotlinx-html-js:$kotlinx_html_version"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:$serialization_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"

    testCompile "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:$serialization_version"
    testCompile "org.jetbrains.kotlinx:kotlinx-html-js:$kotlinx_html_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-annotations-common:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"

    expectedBy project(':common')

}

task populateNodeModules(type: Copy, dependsOn: compileKotlin2Js) {
   from compileKotlin2Js.destinationDir

   configurations.testCompile.each {
       from zipTree(it.absolutePath).matching { include '*.js' }
   }

   into "${buildDir}/node_modules"
}


node { 
  download = true
}

task installMocha(type: NpmTask) {
    args = ['install', 'mocha']
}

task runMocha(type: NodeTask, dependsOn: [compileTestKotlin2Js, populateNodeModules, installMocha]) {
    script = file('node_modules/mocha/bin/mocha')
    args = [compileTestKotlin2Js.outputFile]
}

test.dependsOn runMocha
